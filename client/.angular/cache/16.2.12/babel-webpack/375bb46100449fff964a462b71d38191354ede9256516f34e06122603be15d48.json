{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Inject, Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { map, tap } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { intersection } from '../utils/intersection';\nexport let AuthGuard = class AuthGuard {\n  constructor(allowedRoles, authService, router) {\n    this.allowedRoles = allowedRoles;\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    return this.authService.user$.pipe(map(user => intersection(this.allowedRoles, user?.roles || []).length > 0), tap(allowed => {\n      if (!allowed) {\n        this.router.navigate(['/login'], {\n          queryParams: {\n            returnUrl: state.url\n          }\n        });\n      }\n    }));\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: Array,\n    decorators: [{\n      type: Inject,\n      args: [String]\n    }]\n  }, {\n    type: AuthService\n  }, {\n    type: Router\n  }];\n};\nAuthGuard = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthGuard);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}