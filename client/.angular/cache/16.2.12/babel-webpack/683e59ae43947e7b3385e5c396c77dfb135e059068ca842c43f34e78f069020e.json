{"ast":null,"code":"import { map, tap } from 'rxjs';\nimport { intersection } from '../utils/intersection';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(allowedRoles, authService, router) {\n      this.allowedRoles = allowedRoles;\n      this.authService = authService;\n      this.router = router;\n    }\n    canActivate(route, state) {\n      return this.authService.user$.pipe(map(user => intersection(this.allowedRoles, user?.roles || []).length > 0), tap(allowed => {\n        if (!allowed) {\n          this.router.navigate(['/login'], {\n            queryParams: {\n              returnUrl: state.url\n            }\n          });\n        }\n      }));\n    }\n    static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(String), i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}